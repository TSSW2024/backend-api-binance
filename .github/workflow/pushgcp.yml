name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROYECT_PROD }}
  KEY_FILE: ${{ secrets.GCP_SA_KEY_PROD}}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_PROD }}   # TODO: update to cluster name
  GKE_ZONE:   ${{ secrets.GKE_PROJECGKE_ZONE_PRODT }} # TODO: update to cluster zone
  DEPLOYMENT_NAME: name # TODO: update to deployment name
  REPOSITORY: samples # TODO: update to Artifact Registry docker repository
  IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials: KEY_FILE

    # Alternative option - authentication via credentials json
    # - id: 'auth'
    #   uses: 'google-github-actions/auth@v0'
    #   with:
    #     credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: GKE_CLUSTER
        location: GKE_ZONE

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: ConfigDeploy

      run: |-
        sed -i :s~{REPOSITORY:}~${{ env.REPOSITORY }}~" deploy/k8s/deployment.yaml
        sed -i "s~{PROYECT_ID}~${{ env.PROYECT_ID }}~" deploy/k8s/deployment.yaml
        sed -i "s~{IMAGE_TAG}~${{ env.IMAGE }}~" deploy/k8s/deployment.yaml
        sed -i "s~{GITHUB_SHA}~${{ github.sha }}~" deploy/k8s/deployment.yaml
        cd deploy/k8s/
        kubectl apply -f deployment.yaml

    - name: Deploy

       run: |-
        # replacing the image name in the k8s template
        ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide